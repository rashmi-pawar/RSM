{"version":3,"sources":["webpack:///./src/app/resetpassword/resetpassword.module.ts","webpack:///./src/app/resetpassword/resetpassword.page.html","webpack:///./src/app/resetpassword/resetpassword.page.scss","webpack:///./src/app/resetpassword/resetpassword.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAYF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAVnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BpC,gvF;;;;;;;;;;;ACAA,mCAAmC,mBAAmB,oBAAoB,GAAG,WAAW,kBAAkB,GAAG,2BAA2B,oBAAoB,GAAG,0CAA0C,2BAA2B,sBAAsB,KAAK,qBAAqB,sBAAsB,KAAK,GAAG,0CAA0C,2BAA2B,sBAAsB,KAAK,qBAAqB,sBAAsB,KAAK,GAAG,6CAA6C,mwD;;;;;;;;;;;;;;;;;;;;;;;ACAhc;AACD;AACc;AAMvC;AACoB;AACoB;AACJ;AAQ5D;IAIE,2BACU,cAA8B,EAC9B,WAAwB,EAEzB,OAAsB,EACrB,UAAsB,EACtB,cAA8B,EAC/B,SAA0B;QANzB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QAEzB,YAAO,GAAP,OAAO,CAAe;QACrB,eAAU,GAAV,UAAU,CAAY;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC/B,cAAS,GAAT,SAAS,CAAiB;QARnC,YAAO,GAAQ,EAAE,CAAC;QAUhB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,IAAI,0DAAW,CACpB,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC;gBACjB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAChB,4FAA4F,CAC7F;aACF,CAAC,CACH;YACD,WAAW,EAAE,IAAI,0DAAW,CAC1B,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC;gBACjB,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAChB,wDAAwD,CACzD;aACF,CAAC,CACH;YACD,cAAc,EAAE,IAAI,0DAAW,CAC7B,EAAE,EACF,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAC1C;YACD,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpE,CAAC,CAAC;IACL,CAAC;IACD,gCAAI,GAAJ,UAAK,GAAG;QACN,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,EAAC,CAAC,CAAC;IAClF,CAAC;IACD,oCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,MAAM;YAC/C,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;YACnD,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,wCAAY,GAAlB,UAAmB,GAAG;;;;;4BACN,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,IAAI;4BACd,IAAI,EAAE,IAAI;4BACV,QAAQ,EAAE,aAAa;yBACxB,CAAC;;wBALI,KAAK,GAAG,SAKZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IACD,iCAAK,GAAL;QAAA,iBA4BC;QA3BC,IACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,EACxE;YACA,IAAM,IAAI,GAAG;gBACX,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK;gBACjC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW;gBAC1C,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc;gBACrD,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG;aAC9B,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS,CAC3C,UAAC,GAAG;gBACF,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;oBACzB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,KAAI,CAAC,OAAO,EAAE,EAAC,CAAC,CAAC;oBAC/E,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;iBACxB;qBAAM;oBACL,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;iBACnC;YACH,CAAC,EACD,UAAC,GAAG;gBACF,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC,CACF,CAAC;SACH;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,4CAA4C,CAAC,CAAC;SACjE;IACH,CAAC;IAvFU,iBAAiB;QAN7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAEzC,CAAC;QACD,kFAAS,CAAC,uBAAuB,CAAC;+EAMP,8DAAc;YACjB,0DAAW;YAEhB,4DAAa;YACT,uDAAU;YACN,uEAAc;YACpB,8DAAe;OAXxB,iBAAiB,CAwF7B;IAAD,wBAAC;CAAA;AAxF6B","file":"resetpassword-resetpassword-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetpasswordPage } from './resetpassword.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetpasswordPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ResetpasswordPage]\n})\nexport class ResetpasswordPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"white\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color=\\\"primary\\\" defaultHref=\\\"forgotpassword\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title color=\\\"dark\\\">\\n      Reset Password\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <div class=\\\"ion-padding-horizontal\\\">\\n    <form [formGroup]=\\\"onAddForm\\\" class=\\\"list-form\\\">\\n\\n      <ion-item lines=\\\"none\\\" no-padding class=\\\"log-data\\\">\\n        <ion-label position=\\\"floating\\\">Email Address</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" inputmode=\\\"email\\\" clearOnEdit=\\\"false\\\"></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"onAddForm.controls.email.hasError('required') && onAddForm.controls.email.touched\\\">\\n        <p class=\\\"text08\\\">Please enter email address.</p>\\n      </div>\\n      <ion-item lines=\\\"none\\\" no-padding class=\\\"log-data\\\">\\n        <ion-label position=\\\"floating\\\">New Password</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"newpassword\\\" inputmode=\\\"password\\\" minlength=\\\"8\\\" clearOnEdit=\\\"false\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"onAddForm.controls.newpassword.hasError('required') && onAddForm.controls.newpassword.touched\\\">\\n        <p class=\\\"text08\\\">Please enter password.</p>\\n      </div>\\n      <div *ngIf=\\\"onAddForm.controls.newpassword.hasError('pattern') && onAddForm.controls.newpassword.touched\\\">\\n        <p class=\\\"text08\\\">Password must contain at least 8 characters, uppercase, lowercase, special character and number</p>\\n      </div>\\n      <ion-item lines=\\\"none\\\" no-padding class=\\\"log-data\\\">\\n        <ion-label position=\\\"floating\\\">Confirm Password</ion-label>\\n        <ion-input type=\\\"password\\\" formControlName=\\\"retypepassword\\\" inputmode=\\\"password\\\" clearOnEdit=\\\"false\\\" minlength=\\\"8\\\">\\n        </ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"onAddForm.controls.retypepassword.hasError('required') && onAddForm.controls.retypepassword.touched\\\">\\n        <p class=\\\"text08\\\">Please enter confirm password.</p>\\n      </div>\\n      <ion-item lines=\\\"none\\\" no-padding class=\\\"log-data ion-padding-bottom\\\">\\n        <ion-label position=\\\"floating\\\">Enter OTP</ion-label>\\n        <ion-input type=\\\"number\\\" pattern=\\\"[0-9]*\\\" formControlName=\\\"otp\\\" clearOnEdit=\\\"false\\\"></ion-input>\\n      </ion-item>\\n      <div *ngIf=\\\"onAddForm.controls.otp.hasError('required') && onAddForm.controls.otp.touched\\\">\\n        <p class=\\\"text08\\\">Please enter OTP.</p>\\n      </div>\\n      <ion-button expand=\\\"full\\\" color=\\\"primary\\\" class=\\\"ion-margin-top\\\" (click)=\\\"reset()\\\" [disabled]=\\\"!onAddForm.valid \\\"\\n        mode=\\\"md\\\">Reset</ion-button>\\n    </form>\\n  </div>\\n</ion-content>\"","module.exports = \".forgot-pass h1 {\\n  color: #2f2f2f;\\n  font-size: 24px;\\n}\\n\\n.avvv {\\n  padding: 35px;\\n}\\n\\n.forgot-pass ion-icon {\\n  font-size: 30px;\\n}\\n\\n@media screen and (max-width: 360px) {\\n  .forgot-pass ion-icon {\\n    font-size: 26px;\\n  }\\n  .forgot-pass h1 {\\n    font-size: 22px;\\n  }\\n}\\n\\n@media screen and (max-width: 320px) {\\n  .forgot-pass ion-icon {\\n    font-size: 24px;\\n  }\\n  .forgot-pass h1 {\\n    font-size: 20px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy8yMDIydTEzL0Rlc2t0b3AvdW50aXRsZWQgZm9sZGVyIDQvQXJjaGl2ZS9zcmMvYXBwL3Jlc2V0cGFzc3dvcmQvcmVzZXRwYXNzd29yZC5wYWdlLnNjc3MiLCJzcmMvYXBwL3Jlc2V0cGFzc3dvcmQvcmVzZXRwYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxjQUFBO0VBQ0EsZUFBQTtBQ0FKOztBREdBO0VBQ0ksYUFBQTtBQ0FKOztBREVBO0VBQ0ksZUFBQTtBQ0NKOztBRENBO0VBRUk7SUFDSSxlQUFBO0VDQ047RURDRTtJQUVBLGVBQUE7RUNBRjtBQUNGOztBREVBO0VBRUk7SUFDSSxlQUFBO0VDRE47RURHRTtJQUVBLGVBQUE7RUNGRjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcmVzZXRwYXNzd29yZC9yZXNldHBhc3N3b3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3Jnb3QtcGFzcyBoMVxue1xuICAgIGNvbG9yOiAjMmYyZjJmO1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmF2dnZ7XG4gICAgcGFkZGluZzogMzVweDtcbn1cbi5mb3Jnb3QtcGFzcyBpb24taWNvbiB7XG4gICAgZm9udC1zaXplOiAzMHB4O1xufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDozNjBweClcbntcbiAgICAuZm9yZ290LXBhc3MgaW9uLWljb24ge1xuICAgICAgICBmb250LXNpemU6IDI2cHg7XG4gICAgfVxuICAgIC5mb3Jnb3QtcGFzcyBoMVxue1xuICAgIGZvbnQtc2l6ZTogMjJweDtcbn1cbn1cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6MzIwcHgpXG57XG4gICAgLmZvcmdvdC1wYXNzIGlvbi1pY29uIHtcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgIH1cbiAgICAuZm9yZ290LXBhc3MgaDFcbntcbiAgICBmb250LXNpemU6IDIwcHg7XG59XG59IiwiLmZvcmdvdC1wYXNzIGgxIHtcbiAgY29sb3I6ICMyZjJmMmY7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmF2dnYge1xuICBwYWRkaW5nOiAzNXB4O1xufVxuXG4uZm9yZ290LXBhc3MgaW9uLWljb24ge1xuICBmb250LXNpemU6IDMwcHg7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gIC5mb3Jnb3QtcGFzcyBpb24taWNvbiB7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICB9XG4gIC5mb3Jnb3QtcGFzcyBoMSB7XG4gICAgZm9udC1zaXplOiAyMnB4O1xuICB9XG59XG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMjBweCkge1xuICAuZm9yZ290LXBhc3MgaW9uLWljb24ge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgfVxuICAuZm9yZ290LXBhc3MgaDEge1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgfVxufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { PageTrack } from \"../decorators/page-track.decorator\";\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { ApiService } from \"../api.service\";\nimport { ToastController, NavController } from \"@ionic/angular\";\nimport { SettingService } from \"../service/setting.service\";\n\n@Component({\n  selector: \"app-resetpassword\",\n  templateUrl: \"./resetpassword.page.html\",\n  styleUrls: [\"./resetpassword.page.scss\"],\n})\n@PageTrack(\"Reset Password Screen\")\nexport class ResetpasswordPage implements OnInit {\n  public onAddForm: FormGroup;\n  userid: any;\n  nextURL: any = '';\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n\n    public navCtrl: NavController,\n    private apiService: ApiService,\n    private settingService: SettingService,\n    public toastCtrl: ToastController\n  ) {\n    this.userid = this.settingService.getUserId();\n    this.onAddForm = this.formBuilder.group({\n      email: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            \"[A-Za-z0-9._%+-]{3,}@[a-zA-Z]{3,}([.]{1}[a-zA-Z]{2,}|[.]{1}[a-zA-Z]{2,}[.]{1}[a-zA-Z]{2,})\"\n          ),\n        ])\n      ),\n      newpassword: new FormControl(\n        \"\",\n        Validators.compose([\n          Validators.required,\n          Validators.pattern(\n            \"^(?=.*[A-Z])(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{8,}$\"\n          ),\n        ])\n      ),\n      retypepassword: new FormControl(\n        \"\",\n        Validators.compose([Validators.required])\n      ),\n      otp: new FormControl(\"\", Validators.compose([Validators.required])),\n    });\n  }\n  goto(url) {\n    this.navCtrl.navigateBack(\"/\" + url, { queryParams: { nextURL: this.nextURL }});\n  }\n  ngOnInit() {\n    this.activatedRoute.queryParams.subscribe((params) => {\n      this.onAddForm.patchValue({ email: params.email });\n      this.nextURL = params.nextURL;\n    });\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 2000,\n      mode: \"md\",\n      cssClass: \"customToast\",\n    });\n    toast.present();\n  }\n  reset() {\n    if (\n      this.onAddForm.value.newpassword === this.onAddForm.value.retypepassword\n    ) {\n      const data = {\n        email: this.onAddForm.value.email,\n        password: this.onAddForm.value.newpassword,\n        confirm_password: this.onAddForm.value.retypepassword,\n        otp: this.onAddForm.value.otp,\n      };\n      this.apiService.resetpassword(data).subscribe(\n        (res) => {\n          if (res[\"status\"] == true) {\n            this.presentToast(res[\"message\"]);\n            this.navCtrl.navigateRoot(\"/login\", { queryParams: { nextURL: this.nextURL }});\n            this.onAddForm.reset();\n          } else {\n            this.presentToast(res[\"message\"]);\n          }\n        },\n        (err) => {\n          this.presentToast(err.error.message);\n          console.log(err.error.message);\n        }\n      );\n    } else {\n      this.presentToast(\"Password and Confirm password doesnt match\");\n    }\n  }\n}\n"],"sourceRoot":""}