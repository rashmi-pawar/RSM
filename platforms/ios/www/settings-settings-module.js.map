{"version":3,"sources":["webpack:///./src/app/settings/settings.module.ts","webpack:///./src/app/settings/settings.page.html","webpack:///./src/app/settings/settings.page.scss","webpack:///./src/app/settings/settings.page.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"tabs/dashboard\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Settings</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-list>\\n    <ion-item lines=\\\"none\\\" no-padding>\\n      <ion-icon name=\\\"locate\\\" color=\\\"primary\\\"> </ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"goTo('triphistory')\\\">Trip History</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"goTo('triphistory')\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\" no-padding>\\n      <ion-icon name=\\\"locate\\\" color=\\\"primary\\\"> </ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"goTo('tripsetting')\\\">Trip Settings</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"goTo('tripsetting')\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"userData != undefined && userData\\\" lines=\\\"none\\\" no-padding>\\n      <ion-icon color=\\\"primary\\\" name=\\\"create\\\"></ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"goTo('updateprofile')\\\">Edit Profile</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"goTo('updateprofile')\\\"></ion-icon>\\n    </ion-item>\\n\\n    <ion-item *ngIf=\\\"userData != undefined && userData\\\" lines=\\\"none\\\" no-padding>\\n      <ion-icon color=\\\"primary\\\" name=\\\"cash\\\"></ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"goTo('subscription')\\\">Subscription</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"goTo('subscription')\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"buttonItems.name == 'Logout'\\\" lines=\\\"none\\\" no-padding>\\n      <ion-icon color=\\\"primary\\\" name=\\\"person\\\"></ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"goTo('updatepassword')\\\">Change Password</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"goTo('updatepassword')\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"buttonItems.name == 'Logout'\\\" lines=\\\"none\\\" no-padding>\\n      <ion-icon color=\\\"primary\\\" name=\\\"open\\\"></ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"logout()\\\">Logout</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"logout()\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item *ngIf=\\\"buttonItems.name == 'Login'\\\" lines=\\\"none\\\" no-padding>\\n      <ion-icon color=\\\"primary\\\" name=\\\"person\\\"></ion-icon>\\n      <ion-label style=\\\"margin-left: 10px;\\\" (click)=\\\"goTo('login')\\\">Login</ion-label>\\n      <ion-icon color=\\\"primary\\\" name=\\\"arrow-forward\\\" (click)=\\\"goTo('login')\\\"></ion-icon>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController, NavController, Events, MenuController } from '@ionic/angular';\nimport { PageTrack } from '../decorators/page-track.decorator';\nimport { SettingService } from '../service/setting.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss']\n})\n@PageTrack('Settings Screen')\nexport class SettingsPage implements OnInit {\n  userData: any;\n  buttonItems: any = {};\n  constructor(\n    private navCtrl: NavController,\n    public events: Events,\n    private toastCtrl: ToastController,\n    private settingService: SettingService,\n    public menuCtrl: MenuController\n  ) {\n    this.menuCtrl.enable(false);\n    this.userData = this.settingService.getUserData();\n\n    const that = this;\n    if (this.userData !== undefined && this.userData) {\n      that.buttonItems = {\n        name: 'Logout',\n        icon: 'person'\n      };\n    } else {\n      that.buttonItems = {\n        name: 'Login',\n        icon: 'person'\n      };\n    }\n    events.subscribe('user:created', (type) => {\n      this.userData = this.settingService.getUserData();\n      if (type === 'logout') {\n        that.buttonItems = {\n          name: 'Login',\n          icon: 'person'\n        };\n      } else {\n        that.buttonItems = {\n          name: 'Logout',\n          icon: 'person'\n        };\n      }\n    });\n  }\n\n  ngOnInit() { }\n  goTo(path: any) {\n    this.navCtrl.navigateRoot('/' + path);\n  }\n\n  async presentToast(msg) {\n    const toast = await this.toastCtrl.create({\n      message: msg,\n      duration: 2000,\n      mode: 'md',\n      cssClass: 'customToast'\n    });\n    toast.present();\n  }\n  logout() {\n    this.settingService.clear();\n    this.events.publish('user:created', 'logout');\n    this.presentToast('Logout Successfully');\n    this.navCtrl.navigateRoot('/tabs/dashboard');\n  }\n}\n"],"sourceRoot":""}