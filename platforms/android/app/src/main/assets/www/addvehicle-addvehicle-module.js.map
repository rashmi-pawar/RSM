{"version":3,"sources":["webpack:///./src/app/addvehicle/addvehicle.module.ts","webpack:///./src/app/addvehicle/addvehicle.page.html","webpack:///./src/app/addvehicle/addvehicle.page.scss","webpack:///./src/app/addvehicle/addvehicle.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AACV;AACM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAYF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAVhC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACxBjC,6gD;;;;;;;;;;;ACAA,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC+B;AAC7B;AACQ;AACH;AACM;AAQ/D;IAGE,wBACU,WAAwB,EACxB,cAA8B,EAC9B,cAA8B,EAC/B,SAA0B,EAC1B,MAAc;QALvB,iBAUC;QATS,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC/B,cAAS,GAAT,SAAS,CAAiB;QAC1B,WAAM,GAAN,MAAM,CAAQ;QANvB,WAAM,GAAQ,EAAE,CAAC;QAQf,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,UAAC,IAAI;YACzC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;QAC9C,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CACzE;YACD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC5E,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV;QACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAEK,qCAAY,GAAlB;;;;;4BACgB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,OAAO,EAAE,6BAA6B;4BACtC,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,cAAc;aAChB,kBAAkB,EAAE;aACpB,IAAI,CAAC,aAAG;QACT,CAAC,CAAC;aACD,KAAK,CAAC,eAAK;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IA7CU,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wGAAqC;;SAEtC,CAAC;QACD,kFAAS,CAAC,gBAAgB,CAAC;+EAKH,0DAAW;YACR,+DAAc;YACd,uEAAc;YACpB,8DAAe;YAClB,qDAAM;OARZ,cAAc,CA8C1B;IAAD,qBAAC;CAAA;AA9C0B","file":"addvehicle-addvehicle-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { AddvehiclePage } from './addvehicle.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddvehiclePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddvehiclePage]\n})\nexport class AddvehiclePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"settings\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Add Vehicle</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <form [formGroup]=\\\"onAddForm\\\" class=\\\"list-form\\\">\\n    <ion-item class=\\\"log-data\\\" no-padding lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Name</ion-label>\\n      <ion-input class=\\\"login-inputt\\\" type=\\\"text\\\" formControlName=\\\"vehiclename\\\">\\n      </ion-input>\\n    </ion-item>\\n    <ion-item no-padding lines=\\\"none\\\"\\n      *ngIf=\\\"onAddForm.controls.vehiclename.hasError('required') && onAddForm.controls.vehiclename.touched\\\">\\n      <p class=\\\"text08\\\">Sorry, field name is required!</p>\\n    </ion-item>\\n    <ion-item class=\\\"log-data\\\" no-padding lines=\\\"none\\\">\\n      <ion-label position=\\\"stacked\\\">Type</ion-label>\\n      <ion-input class=\\\"login-inputt\\\" type=\\\"text\\\" formControlName=\\\"vehicletype\\\">\\n      </ion-input>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\" no-padding\\n      *ngIf=\\\"onAddForm.controls.vehicletype.hasError('required') && onAddForm.controls.vehicletype.touched\\\">\\n      <p class=\\\"text08\\\">Sorry, field type is required!</p>\\n    </ion-item>\\n  </form>\\n  <div>\\n    <ion-button color=\\\"primary\\\" class=\\\"log-btn\\\" mode=\\\"ios\\\" icon-left size=\\\"medium\\\" expand=\\\"full\\\" (click)=\\\"addVehicle()\\\"\\n      [disabled]=\\\"!onAddForm.valid\\\" tappable>\\n      SAVE\\n    </ion-button>\\n  </div>\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHZlaGljbGUvYWRkdmVoaWNsZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators, FormControl } from \"@angular/forms\";\nimport { StorageService } from \"../storage.service\";\nimport { SettingService } from \"../service/setting.service\";\nimport { ToastController, Events } from \"@ionic/angular\";\nimport { PageTrack } from \"../decorators/page-track.decorator\";\n\n@Component({\n  selector: \"app-addvehicle\",\n  templateUrl: \"./addvehicle.page.html\",\n  styleUrls: [\"./addvehicle.page.scss\"]\n})\n@PageTrack(\"Vehicle Screen\")\nexport class AddvehiclePage implements OnInit {\n  public onAddForm: FormGroup;\n  userid: any = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private storageService: StorageService,\n    private settingService: SettingService,\n    public toastCtrl: ToastController,\n    public events: Events\n  ) {\n    this.events.subscribe('user:created', (time) => {\n      this.userid = this.settingService.getUserId();\n    });\n  }\n\n  ngOnInit() {\n    this.userid = this.settingService.getUserId();\n    this.createTable();\n    this.onAddForm = this.formBuilder.group({\n      vehiclename: new FormControl(\"\", Validators.compose([Validators.required])\n      ),\n      vehicletype: new FormControl(\"\", Validators.compose([Validators.required]))\n    });\n  }\n\n  addVehicle(){\n    console.log('addVehicle');\n  }\n\n  async presentToast() {\n    const toast = await this.toastCtrl.create({\n      message: \"Vehicle added successfully.\",\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  createTable() {\n    this.storageService\n      .createVehicleTable()\n      .then(res => {\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n}\n"],"sourceRoot":""}